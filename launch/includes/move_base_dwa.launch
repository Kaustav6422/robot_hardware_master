<?xml version="1.0"?>

<launch>

    <arg name="robot" />
    <arg name="type" default="turtle" />
    <arg name="controlled" default="true" />

    <!--<param name="base_global_planner" value="global_planner/GlobalPlanner" />-->
    <!--<param name="base_global_planner" value="collvoid_simple_global_planner/CollvoidSimpleGlobalPlanner" />-->

    <!-- <remap from="cmd_vel" to="navigation_velocity_smoother/raw_cmd_vel"/>
     <remap from="scan" to="/scan_filtered"/> -->

    <!-- <node pkg="move_base" type="move_base" respawn="false" name="move_base">
        <rosparam command="load" file="$(find collvoid_turtlebot)/params/costmap_common_$(arg type).yaml" ns="local_costmap" />
        <rosparam command="load" file="$(find collvoid_turtlebot)/params/costmap_common_$(arg type).yaml" ns="global_costmap" />
        <rosparam command="load" file="$(find collvoid_turtlebot)/params/move_base_params_$(arg type).yaml" />
        <rosparam command="load" file="$(find collvoid_turtlebot)/params/collvoid_common.yaml" ns="CollvoidScoring" />

        <remap from="map" to="/map" />

        <param name="base_local_planner" value="collvoid_dwa_local_planner/DWAPlannerROS" /> #### ???
        <param name="base_local_planner" value="collvoid_local_planner/CollvoidLocalPlanner" />
        <param name="base_global_planner" value="navfn/NavfnROS" />     
    </node> -->

    <!-- <rosparam command="load" file="$(find collvoid_turtlebot)/params/me_publisher_turtle.yaml"/>
    <rosparam command="load" file="$(find collvoid_turtlebot)/params/collvoid_common.yaml" ns="collvoid" />
    <param name="collvoid/base_frame" value="base_link" />

    <node pkg="collvoid_local_planner" type="MePublisher" name="me_publisher"  />
    <node pkg="collvoid_controller" type="position_share_controller.py" name="position_share_controller"  /> -->

<!-- ########################################################################################################### -->

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
       <rosparam command="load" file="$(find robot_hardware)/params/costmap_common_$(arg type).yaml" ns="local_costmap" /> ####
       <rosparam command="load" file="$(find robot_hardware)/params/costmap_common_$(arg type).yaml" ns="global_costmap" /> ####
       <rosparam command="load" file="$(find robot_hardware)/params/move_base_params_$(arg type).yaml" /> ####
       <rosparam command="load" file="$(find robot_hardware)/params/collvoid_config.yaml" />
       <rosparam command="load" file="$(find robot_hardware)/params/collvoid_common.yaml" ns="CollvoidLocalPlanner" />

       <remap from="map" to="/map" /> 
       <param name="~controlled" value="$(arg controlled)" />
       <param name="~tf_prefix" value="$(arg robot)" />
 
       <param name="global_costmap/global_frame" value="map"/>  #### 
       <param name="global_costmap/robot_base_frame" value="base_link"/>  <!--from collvoid --> ####
       <param name="global_costmap/laser_scan_sensor/sensor_frame" value="laser"/> ####
       <param name="global_costmap/laser_scan_sensor/topic" value="scan"/> ####

       <param name="local_costmap/global_frame" value="odom"/> ####
       <param name="local_costmap/robot_base_frame" value="base_link"/> <!--from collvoid --> ####
       <param name="local_costmap/laser_scan_sensor/sensor_frame" value="laser"/> ####
       <param name="local_costmap/laser_scan_sensor/topic" value="scan"/> ####
       <param name="local_costmap/obstacle_layer/laser_scan_sensor/topic" value="scan"/> ####

       <param name="base_global_planner" type="string" value="navfn/NavfnROS" /> <!-- added from clearpath robotics website --> ####
       <param name="base_local_planner" value="collvoid_local_planner/CollvoidLocalPlanner" />  <!-- CHANGED THE LOCAL PLANNER --> ####
       <!-- <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/> -->  <!-- added from clearpath robotics website --> 
    </node>

    <rosparam command="load" file="$(find collvoid_stage)/params/me_publisher_turtle.yaml"/> ####
    <rosparam command="load" file="$(find collvoid_stage)/params/collvoid_common.yaml" ns="collvoid" /> ####
    <param name="collvoid/base_frame" value="base_link" /> ####

    <node pkg="collvoid_local_planner" type="MePublisher" name="me_publisher"  /> ####
    <node pkg="collvoid_controller" type="position_share_controller.py" name="position_share_controller"  /> ####

    <node pkg="collvoid_controller" type="active_collision_avoidance.py" name="active_collvoid">
       <param name="~base_frame_id" value="base_link" />
    </node>

    <node pkg="collvoid_controller" type="detect_obstacles.py" name="detect_obstacles" >
        <param name="~base_frame" value="base_link" />
    </node> 

</launch>
  
